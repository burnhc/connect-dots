(this.webpackJsonpdots=this.webpackJsonpdots||[]).push([[0],{14:function(e,t,r){},15:function(e,t,r){"use strict";r.r(t);var i=r(0),a=r(1),n=r.n(a),s=r(8),o=r.n(s),c=r(2),d=r(3),l=r(5),p=r(4),u=r(6),h=function(e){Object(l.a)(r,e);var t=Object(p.a)(r);function r(){var e;Object(c.a)(this,r);for(var i=arguments.length,a=new Array(i),n=0;n<i;n++)a[n]=arguments[n];return(e=t.call.apply(t,[this].concat(a))).checkFormat=function(e){if(e.includes(null)||3!==e.length)return alert("Edges must be entered in the form: x1,y1 x2,y2 color"),!0},e.checkCoordinates=function(t,r,i,a){var n=e.props.size-1;if(t>n||t<0||!Number.isInteger(t)||r>n||r<0||!Number.isInteger(r)||i>n||i<0||!Number.isInteger(i)||a>n||a<0||!Number.isInteger(a))return alert("With a grid size of "+e.props.size+", all coordinates must be integers from 0 to "+n+" (inclusive)."),!0},e}return Object(d.a)(r,[{key:"onDraw",value:function(){var e=[],t=this.props.value.split(/\r?\n/);t=t.filter(Boolean);var r,i=!1,a=Object(u.a)(t);try{for(a.s();!(r=a.n()).done;){var n=r.value;if(n=n.split(" "),i=this.checkFormat(n))break;n[0]=n[0].split(","),n[1]=n[1].split(",");var s=parseFloat(n[0][0]),o=parseFloat(n[0][1]),c=parseFloat(n[1][0]),d=parseFloat(n[1][1]),l=n[2];if(i=this.checkCoordinates(s,o,c,d))break;e.push([s,o,c,d,l])}}catch(p){a.e(p)}finally{a.f()}i||this.props.onDraw(e)}},{key:"render",value:function(){var e=this,t=parseInt(this.props.size),r="With a grid size of ".concat(t,", all coordinates\n        must be integers from 0 to ").concat(t-1," (inclusive).");return(isNaN(t)||0===t||1===t)&&(r="The grid size must be greater than 1 to draw lines."),Object(i.jsxs)("div",{id:"edge-list",children:[Object(i.jsx)("span",{id:"bodyText",children:"Draw lines between the dots by specifying the line coordinates in the box below (upper-left dot is x = 0, y = 0). Separate each individual line with ENTER."}),Object(i.jsx)("br",{}),Object(i.jsx)("p",{style:{color:"#98959d"},children:r}),Object(i.jsx)("textarea",{ref:"textarea",placeholder:"Enter lines here: x1,y1 x2,y2 color",rows:5,cols:40,onChange:this.props.onChange,value:this.props.value}),Object(i.jsx)("br",{}),Object(i.jsx)("button",{onClick:function(){e.props.size>1&&(e.onDraw(),console.log("Draw onClick"))},children:"Draw Lines"}),Object(i.jsx)("button",{onClick:function(){e.props.onClear(),console.log("Clear onClick")},children:"Clear Lines"})]})}}]),r}(a.Component),g=function(e){Object(l.a)(r,e);var t=Object(p.a)(r);function r(e){var i;return Object(c.a)(this,r),(i=t.call(this,e)).redraw=function(){var e=i.canvasReference.current.getContext("2d");e.clearRect(0,0,i.props.width,i.props.height),e.fillStyle="#272629",e.fillRect(0,0,500,500);var t,r=i.getCircleCoordinates(),a=Object(u.a)(r);try{for(a.s();!(t=a.n()).done;){var n=t.value;i.drawCircle(e,n)}}catch(d){a.e(d)}finally{a.f()}if(i.state.drawEdges!==i.props.toggleDrawEdges){var s=i.props.edges;i.setState({drawEdges:!i.state.drawEdges,edgesToDraw:s})}var o=500/(i.props.size+1),c=o*i.props.size;i.drawEdges(e,o,c)},i.getCircleCoordinates=function(){for(var e=i.props.size,t=[],r=500/(e+1),a=1;a<=e;a++)for(var n=1;n<=e;n++)t.push([a*r,n*r]);return t},i.drawCircle=function(e,t){e.fillStyle="white";var r=Math.min(4,100/i.props.size);e.beginPath(),e.arc(t[0],t[1],r,0,2*Math.PI),e.fill()},i.drawEdges=function(e,t,r){var a,n=Object(u.a)(i.state.edgesToDraw);try{for(n.s();!(a=n.n()).done;){var s=a.value;console.log(s);var o=(s[0]+1)*t,c=(s[1]+1)*t,d=(s[2]+1)*t,l=(s[3]+1)*t,p=s[4];o<=r&&c<=r&&d<=r&&l<=r&&(e.beginPath(),e.strokeStyle=p,e.lineWidth=3,e.moveTo(o,c),e.lineTo(d,l),e.stroke(),e.closePath())}}catch(h){n.e(h)}finally{n.f()}},i.eraseEdges=function(){i.setState({edgesToDraw:[]})},i.state={drawEdges:i.props.toggleDrawEdges,edgesToDraw:[]},i.canvasReference=n.a.createRef(),i}return Object(d.a)(r,[{key:"componentDidMount",value:function(){this.redraw()}},{key:"componentDidUpdate",value:function(){this.redraw()}},{key:"render",value:function(){return Object(i.jsx)("div",{id:"grid",children:Object(i.jsx)("canvas",{ref:this.canvasReference,width:this.props.width,height:this.props.height})})}}]),r}(a.Component),b=function(e){Object(l.a)(r,e);var t=Object(p.a)(r);function r(){return Object(c.a)(this,r),t.apply(this,arguments)}return Object(d.a)(r,[{key:"render",value:function(){var e=parseFloat(this.props.value),t="The current grid size is ".concat(e," by ").concat(e,"."),r="indianred";return e>200?t="Invalid input. The maximum grid size is ".concat(200,"."):e<0?t="Invalid input. The grid size must be at least 0.":0===e||isNaN(e)?(t="The grid is currently empty. Increase the grid size!",r="#98959d"):Number.isInteger(e)?r="#98959d":t="Invalid input. The grid size must be an integer.",Object(i.jsx)("div",{id:"grid-size-picker",children:Object(i.jsxs)("label",{children:[Object(i.jsx)("span",{id:"bodyText",children:"Set the grid size to"}),Object(i.jsx)("input",{type:"number",step:1,value:this.props.value,onChange:this.props.onChange,min:1,max:200}),Object(i.jsx)("p",{style:{color:r},children:t})]})})}}]),r}(a.Component),f=(r(14),function(e){Object(l.a)(r,e);var t=Object(p.a)(r);function r(e){var i;return Object(c.a)(this,r),(i=t.call(this,e)).updateGridSize=function(e){var t=e.target.value;i.setState({gridSizeInput:parseFloat(t)}),Number.isInteger(parseFloat(t))&&t>=0&&t<=200?i.setState({gridSize:parseInt(t)}):isNaN(parseInt(t))&&i.setState({gridSize:""})},i.onEdgeListChange=function(e){i.setState({edgeInput:e.target.value})},i.onDrawClicked=function(e){i.setState({parsedEdges:e,drawEdges:!i.state.drawEdges})},i.onClearClicked=function(){i.setState({parsedEdges:"",edgeInput:""}),i.gridReference.current.eraseEdges(),console.log(i.state.parsedEdges)},i.state={gridSize:4,gridSizeInput:4,edgeInput:"",parsedEdges:"",drawEdges:!1},i.gridReference=n.a.createRef(),i}return Object(d.a)(r,[{key:"render",value:function(){return Object(i.jsxs)("div",{id:"wrapper",children:[Object(i.jsx)("p",{id:"app-title",children:"connect the dots"}),Object(i.jsx)(b,{value:this.state.gridSizeInput,onChange:this.updateGridSize}),Object(i.jsx)(g,{ref:this.gridReference,edges:this.state.parsedEdges,toggleDrawEdges:this.state.drawEdges,size:this.state.gridSize,width:500,height:500}),Object(i.jsx)(h,{value:this.state.edgeInput,size:this.state.gridSize,onChange:this.onEdgeListChange,onDraw:this.onDrawClicked,onClear:this.onClearClicked})]})}}]),r}(a.Component));o.a.render(Object(i.jsx)(f,{}),document.getElementById("root"))}},[[15,1,2]]]);
//# sourceMappingURL=main.a37246ef.chunk.js.map